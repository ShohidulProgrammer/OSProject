/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package osproject;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class CompareAll extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public CompareAll() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_Home = new javax.swing.JButton();
        btn_Calculate = new javax.swing.JButton();
        txt_FA = new javax.swing.JTextField();
        txt_BA = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_TotalFragmentationWF = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputWF = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        outputFF = new javax.swing.JTable();
        txt_TotalFragmentationFF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        outputBF = new javax.swing.JTable();
        txt_TotalFragmentationBF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        btn_Home.setText("Home");
        btn_Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HomeActionPerformed(evt);
            }
        });

        btn_Calculate.setText("Calculate");
        btn_Calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CalculateActionPerformed(evt);
            }
        });

        txt_BA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_BAActionPerformed(evt);
            }
        });

        jLabel3.setText("File Amount");

        jLabel2.setText("Block Amount");

        jLabel1.setText("Worst Fit Output");

        txt_TotalFragmentationWF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TotalFragmentationWFActionPerformed(evt);
            }
        });

        outputWF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File No.", "File Size", "Block No.", "Block Size", "Fragmentation"
            }
        ));
        jScrollPane2.setViewportView(outputWF);

        jLabel4.setText("First Fit Output");

        outputFF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File No.", "File Size", "Block No.", "Block Size", "Fragmentation"
            }
        ));
        jScrollPane3.setViewportView(outputFF);

        txt_TotalFragmentationFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TotalFragmentationFFActionPerformed(evt);
            }
        });

        jLabel5.setText("Best Fit Output");

        outputBF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File No.", "File Size", "Block No.", "Block Size", "Fragmentation"
            }
        ));
        jScrollPane4.setViewportView(outputBF);

        txt_TotalFragmentationBF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TotalFragmentationBFActionPerformed(evt);
            }
        });

        jLabel6.setText("Compare All Output");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txt_TotalFragmentationWF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(200, 200, 200)
                                .addComponent(jLabel4))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(264, 264, 264)
                                .addComponent(txt_TotalFragmentationFF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(btn_Home))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_FA, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(107, 107, 107)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_BA, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(btn_Calculate)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(200, 200, 200)
                                .addComponent(jLabel5))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(264, 264, 264)
                                .addComponent(txt_TotalFragmentationBF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_FA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_BA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Calculate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_TotalFragmentationWF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_TotalFragmentationFF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_TotalFragmentationBF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Home)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HomeActionPerformed
        // TODO add your handling code here:
        SelectAlgorithm sa = new SelectAlgorithm();
        sa.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_HomeActionPerformed

    private void btn_CalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CalculateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelWF = (DefaultTableModel) outputWF.getModel();
        DefaultTableModel modelFF = (DefaultTableModel) outputFF.getModel();
        DefaultTableModel modelBF = (DefaultTableModel) outputBF.getModel();
        int temp, totalFragmentation = 0,
                fragmentation,
                bCounter3 = 0, bCounter1 = 0, bCounter2 = 0,
                bAmount, fAmount;
        String s1 = txt_FA.getText();
        String s2 = txt_BA.getText();

        fAmount = Integer.parseInt(s1);
        bAmount = Integer.parseInt(s2);

        int fileNo[] = new int[fAmount];
        int files[] = new int[fAmount];
        int blockNo[] = new int[bAmount];
        int blocks[] = new int[bAmount];
        int dBlockNo[] = new int[bAmount];
        int dBlocks[] = new int[bAmount];
        int filled[] = new int[bAmount];
        int dFilled[] = new int[bAmount];

        for (int x = 0; x < bAmount; x++) {
            String ss = JOptionPane.showInputDialog(null, "Enter the block Size of block " + (x + 1) + " :");
            if (ss.length() >= 0) {
                dBlocks[x] = blocks[x] = Integer.parseInt(ss);
                dBlockNo[x] = blockNo[x] = x + 1;
                dFilled[x] = filled[x] = 0;
            } else {
                x--;
            }

        }
        for (int x = 0; x < fAmount; x++) {
            String ss = JOptionPane.showInputDialog(null, "Enter the File Size of File " + (x + 1) + " :");
            if (ss.length() >= 0) {
                files[x] = Integer.parseInt(ss);
                fileNo[x] = x + 1;
            } else {
                x--;
            }
        }

        //Printing
        System.out.println("blockNo.   blocks");
        for (int x = 0; x < bAmount; x++) {
            System.out.println(blockNo[x] + "  " + blocks[x]);
        }
        System.out.println("fileNo.   files");
        for (int x = 0; x < fAmount; x++) {
            System.out.println(fileNo[x] + "  " + files[x]);
        }

        for (int x = 0; x < bAmount; x++) {
            for (int y = x + 1; y < bAmount; y++) {
                if (dBlocks[x] < dBlocks[y]) {
                    temp = dBlocks[x];
                    dBlocks[x] = dBlocks[y];
                    dBlocks[y] = temp;

                    //sorting block serial
                    temp = dBlockNo[x];
                    dBlockNo[x] = dBlockNo[y];
                    dBlockNo[y] = temp;
                }
            }
        }
        //printing after sorting
        System.out.println("blockNo.   blocks");
        for (int x = 0; x < bAmount; x++) {
            System.out.println(dBlockNo[x] + "  " + dBlocks[x]);
        }
        System.out.println("Worst Fit Output: \n");
        for (int x = 0; x < fAmount; x++) {
            for (int y = 0; y < bAmount; y++) {
                if (bCounter1 < bAmount && files[x] <= dBlocks[bCounter1] ) {
                    fragmentation = dBlocks[bCounter1] - files[x];
                    totalFragmentation += fragmentation;

                    System.out.println((x + 1) + "      " + files[x] + "       " + (dBlockNo[bCounter1] + 1) + "       " + dBlocks[bCounter1] + "       " + fragmentation);
                    modelWF.addRow(new Object[]{fileNo[x],files[x],dBlockNo[bCounter1] ,dBlocks[bCounter1],fragmentation});

                    bCounter1++;
                    break;

                }
                //when file ends but block remains, add to fragmentation
                if (x == fAmount - 1 && bCounter1 != bAmount) {
                    for (y = bCounter1; y < bAmount; y++) {
                        totalFragmentation += blocks[y];
                    }
                }
            }
        }
        txt_TotalFragmentationWF.setText("Total Fragmentation :  " + totalFragmentation);

        ////////////////////-------------------------------////////////////////
        ////////                    First Fit Starts                  ////////
        totalFragmentation=0;
        //Checking and printing
        System.out.println("First Fit Output: \n");
        System.out.println("File No. File Size Block No. Block Size Fragmentation");
        for (int x = 0; x < fAmount; x++) {

            for (int y = 0; y < bAmount; y++) {
                if (files[x] <= blocks[y] && filled[y] == 0) {
                    fragmentation = blocks[y] - files[x];
                    totalFragmentation += fragmentation;
                    filled[y] = 1;
                    System.out.println((x + 1) + "      " + files[x] + "       " + (blockNo[y] + 1) + "       " + blocks[y] + "       " + fragmentation);
                    modelFF.addRow(new Object[]{fileNo[x], files[x], blockNo[y], blocks[y], fragmentation});
                    bCounter2++;
                    break;
                }
            }

            //when file ends but block remains, add to fragmentation
            if (x == bAmount - 1 && bCounter2 != bAmount) {
                for (int z = 0; z < bAmount; z++) {
                    if (filled[z] == 0) {
                        totalFragmentation += blocks[z];
                    }
                }
            }
        }

        txt_TotalFragmentationFF.setText("Total Fragmentation:  " + totalFragmentation);

        ////////////////////-------------------------------////////////////////
        ////////                    Best Fit Starts                  ////////
        totalFragmentation=0;
        //Checking and printing
        System.out.println("Best Fit Output: \n");
        System.out.println("File No. File Size Block No. Block Size Fragmentation");

        for (int x = 0; x < fAmount; x++) {
            int bestFit = -1;
            int index = -1;
            for (int y = 0; y < bAmount; y++) {
                if (files[x] <= blocks[y] && dFilled[y] == 0) {
                    if (bestFit == -1) {
                        bestFit = blocks[y];
                        index = y;
                    } else if (blocks[y] < bestFit) {
                        bestFit = blocks[y];
                        index = y;
                    }
                }
            }
            if (index != -1) {
                fragmentation = blocks[index] - files[x];
                totalFragmentation += fragmentation;
                dFilled[index] = 1;
                System.out.println((x + 1) + "      " + files[x] + "       " + (blockNo[index] + 1) + "       " + blocks[index] + "       " + fragmentation);
                modelBF.addRow(new Object[]{fileNo[x], files[x], blockNo[index], blocks[index], fragmentation});
                bCounter3++;
            }

            //when file ends but block remains, add to fragmentation
            if (x == bAmount - 1 && bCounter3 != bAmount) {
                for (int z = 0; z < bAmount; z++) {
                    if (filled[z] == 0) {
                        totalFragmentation += blocks[z];
                    }
                }
            }
        }
        txt_TotalFragmentationBF.setText("Total Fragmentation:  " + totalFragmentation);

    }//GEN-LAST:event_btn_CalculateActionPerformed

    private void txt_BAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_BAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_BAActionPerformed

    private void txt_TotalFragmentationWFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TotalFragmentationWFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TotalFragmentationWFActionPerformed

    private void txt_TotalFragmentationFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TotalFragmentationFFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TotalFragmentationFFActionPerformed

    private void txt_TotalFragmentationBFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TotalFragmentationBFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TotalFragmentationBFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompareAll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompareAll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompareAll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompareAll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompareAll().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Calculate;
    private javax.swing.JButton btn_Home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable outputBF;
    private javax.swing.JTable outputFF;
    private javax.swing.JTable outputWF;
    private javax.swing.JTextField txt_BA;
    private javax.swing.JTextField txt_FA;
    private javax.swing.JTextField txt_TotalFragmentationBF;
    private javax.swing.JTextField txt_TotalFragmentationFF;
    private javax.swing.JTextField txt_TotalFragmentationWF;
    // End of variables declaration//GEN-END:variables
}
